version: '3.8'

services:
  # Zookeeper Service
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      avecaesar-net:
        ipv4_address: 172.20.0.10

  # Kafka Broker 1
  kafka1:
    image: wurstmeister/kafka
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_HEAP_OPTS: "-Xmx1024M -Xms1024M"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      avecaesar-net:
        ipv4_address: 172.20.0.11

  # Kafka Broker 2
  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_HEAP_OPTS: "-Xmx1024M -Xms1024M"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9093 --list"]
      interval: 10s
      timeout: 5s
    networks:
      avecaesar-net:
        ipv4_address: 172.20.0.12

  # Kafka Broker 3
  kafka3:
    image: wurstmeister/kafka
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_HEAP_OPTS: "-Xmx1024M -Xms1024M"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9094 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      avecaesar-net:
        ipv4_address: 172.20.0.13

  # RaceController Service
  racecontroller:
    build:
      context: ./AveCaesarRaceController  # Setze den Kontext auf das richtige Verzeichnis
      dockerfile: ./AveCaesarRaceController/Dockerfile
    container_name: racecontroller
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      # BootstrapServer f√ºr Kafka Client mit allen Kafka-Brokern
      KAFKA_BROKER: kafka1:9092,kafka2:9093,kafka3:9094
    networks:
      avecaesar-net:
        ipv4_address: 172.20.0.14
    restart: always

networks:
  avecaesar-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16